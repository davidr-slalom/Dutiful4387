name: Run TypeScript and Parallel Tasks

on:
  push:
  pull_request:
  workflow_dispatch:
    inputs:
      max_testing_duration:
        description: "Desired maximum test duration"
        required: true
        default: 20
        type: number

jobs:
  generate_number:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./scripts
    outputs:
      shards: ${{ steps.number.outputs.shards }}
      matrix: ${{ steps.matrix.outputs.matrix }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: npm install
        run: npm i

      - name: Run TypeScript file
        id: number
        run: |
          result=$(npx ts-node get_tests.ts ${{ inputs.max_testing_duration }})
          count=$(echo $result | jq length)
          echo "shards=$count" >> "$GITHUB_OUTPUT"

      - name: Upload tests distribution JSON artifact
        uses: actions/upload-artifact@v2
        with:
          name: tests-distribution-artifact
          path: ./scripts/tests_distribution.json

      - name: Generate matrix
        id: matrix
        run: echo "matrix=[$(seq 1 ${{ steps.number.outputs.shards }} | sed 's/.*/"&"/' | paste -sd ',' -)]" >> "$GITHUB_OUTPUT"

      # - name: Print Matrix
      #   run: echo "${{ steps.matrix.outputs.matrix }}"

  print_hello_world:
    needs: generate_number
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./scripts
    strategy:
      matrix:
        run: ${{fromJson(needs.generate_number.outputs.matrix)}}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: npm install
        run: npm i

      - name: Download JSON artifact
        uses: actions/download-artifact@v2
        with:
          name: tests-distribution-artifact

      - name: Run shards tests
        run: npx ts-node run_shards_tests.ts ${{ matrix.run }} ../tests_distribution.json
